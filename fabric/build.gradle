plugins {
    id 'gg.essential.multi-version'
    id 'gg.essential.defaults'
    id 'java-library'
}

def isMainProject = project.name == file("../mainProject").readLines()[0].trim()

dependencies {
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"

    modImplementation include("me.lucko:fabric-permissions-api:$fabric_permissions_api_version")

    modCompileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    shadow project(path: ':common')
}

loom.setAccessWidenerPath((isMainProject ? parent : project).file("src/main/resources/cloplib.accesswidener"))

shadowJar {
    configurations = [project.configurations.shadow]
    destinationDirectory.set(file("$projectDir/build/libs"))

    exclude('net.fabricmc:.*')
    exclude('net.kyori:.*')
    exclude '/mappings/*'
}

remapJar {
    dependsOn tasks.shadowJar
    mustRunAfter tasks.shadowJar
    inputFile = shadowJar.archiveFile.get()
    addNestedDependencies = true

    destinationDirectory.set(file("$rootDir/target/"))
    archiveClassifier.set('')
}

shadowJar.finalizedBy(remapJar)